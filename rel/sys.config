[
    %% SASL config
    {sasl, [{sasl_error_logger, false}]},

    %% lager config
    {lager, [
        {colored, true},
        {log_root, "./log"},
        {handlers, [
            %% show info level or higher level logs at console
            {lager_console_backend, [
                {level, info}, {formatter, lager_default_formatter},
                {formatter_config, [color, "[", sev, " ", time, " ", pid, "] ", message, "\e[0m\r\n"]}
            ]},
            %% rotate error log when it reaches 50 MB; keep 10 rotated logs
            {lager_file_backend, [
                {file, "error.log"},
                {level, error},
                {size, 52428800},
                {count, 10},
                {formatter, lager_default_formatter},
                {formatter_config, ["[", sev, " ", date, " ", time, " ", pid, "] ", message, "\n"]}
            ]},
            %% rotate info log when it reaches 50 MB; keep 10 rotated logs
            {lager_file_backend, [
                {file, "info.log"},
                {level, info},
                {size, 52428800},
                {count, 10},
                {formatter, lager_default_formatter},
                {formatter_config, ["[", sev, " ", date, " ", time, " ", pid, "] ", message, "\n"]}
            ]},
            %% rotate debug log when it reaches 50 MB; keep 10 rotated logs
            {lager_file_backend, [
                {file, "debug.log"},
                {level, debug},
                {size, 52428800},
                {count, 10},
                {formatter, lager_default_formatter},
                {formatter_config, ["[", sev, " ", date, " ", time, " ", pid, "] ", message, "\n"]}
            ]}
        ]},
        {error_logger_hwm, 200},
        % when lager should change mode to synchronous (log queue is longer than async_threshold)
        {async_threshold, 500},
        % when lager should return from mode to synchronous (log queue is shorter than (async_threshold - async_threshold_window)
        {async_threshold_window, 50}
    ]},

    %% Set debug loglevel as default in appmock
    {ctool, [
        {current_loglevel, 0}
    ]},

    %% The line below is modified by starter script
    %% After the modification, the config looks as follows:
    %% [{app_description_file, FilePath}]
    {appmock, []}
].

